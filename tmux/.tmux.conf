# most of this copy-pasted from https://github.com/wincent/wincent/blob/main/aspects/dotfiles/files/.config/tmux/tmux.conf

# For readability, make use of some local variables.
#
# Note: `%hidden` variables were added in 3.2, around 2021-06, so that makes 3.2
# our minimum supported version.
#
%hidden TMUX_VERSION="#{s|next-||:#{version}}"
%hidden IS_TMUX_3_3_OR_ABOVE="#{e|>=|f|0:$TMUX_VERSION,3.3}"
%hidden IS_TMUX_3_4_OR_ABOVE="#{e|>=|f|0:$TMUX_VERSION,3.4}"
%hidden IS_TMUX_3_5_OR_ABOVE="#{e|>=|f|0:$TMUX_VERSION,3.5}"

unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Intuitive window-splitting keys.
bind-key | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind-key '\' split-window -h -c '#{pane_current_path}' # normally prefix-%
bind-key - split-window -v -c '#{pane_current_path}' # normally prefix-double quote

# Open split panes with the path of the current pane.
unbind-key %
bind-key % split-window -h -c '#{pane_current_path}'
unbind-key '"'
bind-key '"' split-window -v -c '#{pane_current_path}'

# Same for new windows.
unbind-key c
bind-key c new-window -c '#{pane_current_path}'

# Vim-like key bindings for pane navigation (default uses cursor keys).
unbind-key h
bind-key h select-pane -L
unbind-key j
bind-key j select-pane -D
unbind-key k
bind-key k select-pane -U
unbind-key l # normally used for last-window
bind-key l select-pane -R

# Resizing (mouse also works).
# Here, and in other binds, `-r` allows us to repeat without having to hit the
# prefix (with repeat-time, which defaults to 500ms).
unbind-key Left
bind-key -r Left resize-pane -L 5
unbind-key Right
bind-key -r Right resize-pane -R 5
unbind-key Down
bind-key -r Down resize-pane -D 5
unbind-key Up
bind-key -r Up resize-pane -U 5

# Fast toggle between current and last-used window (normally prefix-l).
bind-key ^space last-window

# TODO: did not try this yet
# `^space ^space` is awfully close to the destructive `^space space`, which
# trashes the layout. Provide a quick way to get back to the previous-used
# layout.
#
# prefix-p is normally used for previous-window, but I never use that,
# prefering numeric access or the fast toggle above (prefix-^space).
bind-key p select-layout -o

bind-key -r '<' swap-window -d -t '{previous}' # Move window left.
bind-key -r '>' swap-window -d -t '{next}' # Move window right.

set -g base-index 1
set -g pane-base-index 1
set-option -g pane-border-lines single
set-option -g pane-border-status bottom
set -g default-terminal "screen-256color"
set -g history-limit 100000
set -g mouse on
set -g escape-time 100
setw -g mode-keys vi
set-option -g set-titles on # Dynamically update tab and window titles.

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set-option -g renumber-windows on

set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'

# Status bar.
set-option -g status-left-length 40
set-option -g status-left '#[fg=yellow,bold,italics]#{session_name} ยง ' # SECTION SIGN (UTF-8: c2 a7)
set-option -g status-right "#[fg=yellow,bold,italics]$USER@#{host_short} #[fg=magenta]%l:%M %p"
set-option -g status-interval 60 # Default is 15.

# Make widths constant with or without flags.
set-option -w -g window-status-current-format '#[reverse] #{window_index}:#{window_name}#{window_flags} '
set-option -w -g window-status-format ' #{window_index}:#{window_name}#{?#{==:#{window_flags},},  ,#{window_flags} }'

# TODO: try it:
# Stay in copy mode on drag end.
# (Would use `bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X
# stop-selection` but it is a bit glitchy.)
#unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Make double and triple click work outside of copy mode (already works inside it with default bindings).
bind-key -T root DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' \
  "send-keys -M" {
    copy-mode -t'{mouse}' -H
    send-keys -t'{mouse}' -X select-word
  }
bind-key -T root TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' \
  "send-keys -M" {
    copy-mode -t'{mouse}' -H
    send-keys -t'{mouse}' -X select-line
  }

# Don't exit copy mode on double or triple click.
bind-key -T copy-mode-vi DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' \
  "send-keys -M" {
    copy-mode -t'{mouse}' -H
    send-keys -t'{mouse}' -X select-word
  }
bind-key -T copy-mode-vi TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' \
  "send-keys -M" {
    copy-mode -t'{mouse}' -H
    send-keys -t'{mouse}' -X select-line
  }

%hidden IS_COPY_MODE="#{==:#{pane_mode},copy-mode}"
%hidden COPY_MODE_MARKER="#[align=left#,fg=green#,bg=black]  -- COPY --  #[default]"
%hidden COPY_MODE_LEFT="$COPY_MODE_MARKER"
%hidden HAS_SEARCH_RESULT="#{&&:#{e|>|:#{search_count},0},#{search_present}}"
%hidden RESULT_OR_RESULTS="result#{?#{==:#{search_count},1},,s}"
%hidden RESULT_COUNT_IS_PARTIAL="#{e|>|:#{search_count_partial},0}"
%hidden SEARCH_RESULT_COUNT="(#{search_count}#{?$RESULT_COUNT_IS_PARTIAL,+,} $RESULT_OR_RESULTS)"
%hidden OFFSET_FROM_TOP="#{e|-|:#{history_size},#{scroll_position}}"
%hidden COPY_MODE_LOCATION="[$OFFSET_FROM_TOP/#{history_size}]"
%hidden COPY_MODE_CENTER="#[align=centre#,bg=black]#[default]"

%if $IS_TMUX_3_5_OR_ABOVE
%hidden COPY_MODE_RIGHT="#[align=right#,bg=black]  #{?$HAS_SEARCH_RESULT,$SEARCH_RESULT_COUNT  ,}$COPY_MODE_LOCATION  #[default]"
%else
%hidden COPY_MODE_RIGHT="#[align=right#,bg=black]  $COPY_MODE_LOCATION  #[default]"
%endif

set-option -g pane-border-format "#{?$IS_COPY_MODE,$COPY_MODE_LEFT$COPY_MODE_CENTER$COPY_MODE_RIGHT,}"

